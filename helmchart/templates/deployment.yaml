{{- $fullName := include "alertmanager-webhook-telegram.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ $fullName }}
    helm.sh/chart: {{ include "alertmanager-webhook-telegram.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $fullName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $fullName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /health
              port: http
          env:
            {{- with .Values.config.telegram.chat_id }}
            - name: CHAT_ID
              value: {{ $.Values.config.telegram.chat_id }}
            {{- end }}
            {{- with .Values.config.log_level }}
            - name: LOG_LEVEL
              value: "{{ $.Values.config.log_level }}"
            {{- end }}
            {{- with .Values.config.basic_auth.enabled }}
            - name: FORCE_BASIC_AUTH
              value: "{{ $.Values.config.basic_auth.enabled }}"
            {{- end }}
          envFrom:
          - secretRef:
              name: "{{ $fullName }}-token"
          {{- with .Values.template_files }}
          volumeMounts:
          - name: "{{ $fullName }}-config"
            mountPath: /alertmanager-webhook-telegram/templates
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.template_files }}
      volumes:
      - name: "{{ $fullName }}-config"
        configMap:
          name: "{{ $fullName }}-config"
      {{- end }}      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
